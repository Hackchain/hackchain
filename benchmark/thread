#!/usr/bin/env node
'use strict';

const Buffer = require('buffer').Buffer;
const WBuf = require('wbuf');

const hackchain = require('../');

const Interpreter = hackchain.Interpreter;
const asm = new Interpreter.Assembler();

// hlt
asm.jalr('r0', 'r0');

const buf = new WBuf();
asm.render(buf);
const code = Buffer.concat(buf.render());

const memory = Buffer.alloc(0x20000);
code.copy(memory);

const thread = new Interpreter.Thread(memory, 0);

const COUNT = 1e8;

const start = +new Date;
for (let i = 0; i < COUNT; i++)
  thread.runOne();
const end = +new Date;

console.log('ops/sec: %d', COUNT / (end - start) * 1000);
